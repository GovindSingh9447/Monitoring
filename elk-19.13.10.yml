USER-SUPPLIED VALUES:
USER-SUPPLIED VALUES: null
clusterDomain: cluster.local
clusterName: elastic
commonAnnotations: {}
commonLabels: {}
config: {}
containerPorts:
  restAPI: 9200
  transport: 9300
coordinating:
  affinity: {}
  annotations: {}
  args: []
  autoscaling:
    enabled: false
    maxReplicas: 11
    minReplicas: 3
    targetCPU: ""
    targetMemory: ""
  command: []
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  heapSize: 512m
  hostAliases: []
  initContainers: []
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector:
    uat-elk: "true"
  pdb:
    create: false
    maxUnavailable: ""
    minAvailable: 1
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: ""
  podLabels: {}
  podManagementPolicy: Parallel
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: 1
  resources:
    limits: {}
    requests:
      cpu: 500m
      memory: 1024Mi
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  servicenameOverride: ""
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  terminationGracePeriodSeconds: ""
  tolerations:
  - effect: NoSchedule
    key: key
    operator: Equal
    value: persistTool
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
data:
  affinity: {}
  annotations: {}
  args: []
  autoscaling:
    enabled: false
    maxReplicas: 11
    minReplicas: 3
    targetCPU: ""
    targetMemory: ""
  command: []
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  heapSize: 2048m
  hostAliases: []
  initContainers: []
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector:
    uat-elk: "true"
  pdb:
    create: false
    maxUnavailable: ""
    minAvailable: 1
  persistence:
    accessModes:
    - ReadWriteOnce
    annotations: {}
    enabled: true
    existingClaim: ""
    existingVolume: ""
    path: /
    selector: {}
    size: 40Gi
    storageClass: ""
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: ""
  podLabels: {}
  podManagementPolicy: Parallel
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: 3
  resources:
    limits: {}
    requests:
      cpu: 500m
      memory: 3096Mi
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  servicenameOverride: ""
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  terminationGracePeriodSeconds: ""
  tolerations:
  - effect: NoSchedule
    key: key
    operator: Equal
    value: persistTool
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
diagnosticMode:
  args:
  - infinity
  command:
  - sleep
  enabled: false
extraConfig: {}
extraDeploy: []
extraEnvVars: []
extraEnvVarsCM: ""
extraEnvVarsSecret: ""
extraHosts: []
extraVolumeMounts: []
extraVolumes: []
fullnameOverride: ""
global:
  elasticsearch:
    service:
      name: elasticsearch
      ports:
        restAPI: 9200
  imagePullSecrets: []
  imageRegistry: ""
  kibanaEnabled: false
  storageClass: ""
image:
  debug: false
  digest: ""
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/elasticsearch
  tag: 8.7.1-debian-11-r2
ingest:
  affinity: {}
  annotations: {}
  args: []
  autoscaling:
    enabled: false
    maxReplicas: 11
    minReplicas: 3
    targetCPU: ""
    targetMemory: ""
  command: []
  containerPorts:
    restAPI: 9200
    transport: 9300
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: false
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  heapSize: 1024m
  hostAliases: []
  ingress:
    annotations: {}
    apiVersion: ""
    enabled: false
    extraHosts: []
    extraPaths: []
    extraRules: []
    extraTls: []
    hostname: elasticsearch-ingest.local
    ingressClassName: ""
    path: /
    pathType: ImplementationSpecific
    secrets: []
    selfSigned: false
    tls: false
  initContainers: []
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector:
    uat-elk: "true"
  pdb:
    create: false
    maxUnavailable: ""
    minAvailable: 1
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: ""
  podLabels: {}
  podManagementPolicy: Parallel
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: 3
  resources:
    limits: {}
    requests:
      cpu: 500m
      memory: 1500Mi
  schedulerName: ""
  service:
    annotations: {}
    clusterIP: ""
    enabled: false
    externalTrafficPolicy: Cluster
    extraPorts: []
    loadBalancerIP: ""
    loadBalancerSourceRanges: []
    nodePorts:
      restAPI: ""
      transport: ""
    ports:
      restAPI: 9200
      transport: 9300
    sessionAffinity: None
    sessionAffinityConfig: {}
    type: ClusterIP
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  servicenameOverride: ""
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  terminationGracePeriodSeconds: ""
  tolerations:
  - effect: NoSchedule
    key: key
    operator: Equal
    value: persistTool
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
ingress:
  annotations: {}
  apiVersion: ""
  enabled: false
  extraHosts: []
  extraPaths: []
  extraRules: []
  extraTls: []
  hostname: elasticsearch.local
  ingressClassName: ""
  path: /
  pathType: ImplementationSpecific
  secrets: []
  selfSigned: false
  tls: false
initContainers: []
initScripts: {}
initScriptsCM: ""
initScriptsSecret: ""
kibana:
  elasticsearch:
    hosts:
    - '{{ include "elasticsearch.service.name" . }}'
    port: '{{ include "elasticsearch.service.ports.restAPI" . }}'
kubeVersion: ""
master:
  affinity: {}
  annotations: {}
  args: []
  autoscaling:
    enabled: false
    maxReplicas: 11
    minReplicas: 3
    targetCPU: ""
    targetMemory: ""
  command: []
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  heapSize: 1024m
  hostAliases: []
  initContainers: []
  lifecycleHooks: {}
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  masterOnly: true
  nameOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector:
    uat-elk: "true"
  pdb:
    create: false
    maxUnavailable: ""
    minAvailable: 1
  persistence:
    accessModes:
    - ReadWriteOnce
    annotations: {}
    enabled: true
    existingClaim: ""
    existingVolume: ""
    selector: {}
    size: 40Gi
    storageClass: ""
  podAffinityPreset: ""
  podAnnotations: {}
  podAntiAffinityPreset: ""
  podLabels: {}
  podManagementPolicy: Parallel
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: 3
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  serviceAccount:
    annotations: {}
    automountServiceAccountToken: true
    create: false
    name: ""
  servicenameOverride: ""
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 90
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  terminationGracePeriodSeconds: ""
  tolerations:
  - effect: NoSchedule
    key: key
    operator: Equal
    value: persistTool
  topologySpreadConstraints: []
  updateStrategy:
    type: RollingUpdate
metrics:
  affinity: {}
  annotations:
    helm.sh/hook: post-install,post-upgrade
    helm.sh/hook-weight: "5"
  args: []
  command: []
  containerSecurityContext:
    enabled: true
    runAsNonRoot: true
    runAsUser: 1001
  customLivenessProbe: {}
  customReadinessProbe: {}
  customStartupProbe: {}
  enabled: false
  extraArgs: []
  extraEnvVars: []
  extraEnvVarsCM: ""
  extraEnvVarsSecret: ""
  extraVolumeMounts: []
  extraVolumes: []
  fullnameOverride: ""
  hostAliases: []
  image:
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/elasticsearch-exporter
    tag: 1.5.0-debian-11-r96
  initContainers: []
  livenessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 60
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  nameOverride: ""
  nodeAffinityPreset:
    key: ""
    type: ""
    values: []
  nodeSelector:
    uat-elk: "true"
  podAffinityPreset: ""
  podAnnotations:
    prometheus.io/port: "9114"
    prometheus.io/scrape: "true"
  podAntiAffinityPreset: ""
  podLabels: {}
  podSecurityContext:
    enabled: true
    fsGroup: 1001
  priorityClassName: ""
  prometheusRule:
    additionalLabels: {}
    enabled: false
    namespace: ""
    rules: []
  readinessProbe:
    enabled: true
    failureThreshold: 5
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  resources:
    limits: {}
    requests: {}
  schedulerName: ""
  service:
    annotations:
      prometheus.io/port: "9114"
      prometheus.io/scrape: "true"
    port: 9114
    type: ClusterIP
  serviceMonitor:
    enabled: false
    honorLabels: false
    interval: ""
    jobLabel: ""
    labels: {}
    metricRelabelings: []
    namespace: ""
    relabelings: []
    scrapeTimeout: ""
    selector: {}
  sidecars: []
  startupProbe:
    enabled: false
    failureThreshold: 5
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
  tolerations:
  - effect: NoSchedule
    key: key
    operator: Equal
    value: persistTool
  topologySpreadConstraints: []
nameOverride: ""
namespaceOverride: ""
plugins: ""
security:
  elasticPassword: ""
  enabled: false
  existingSecret: ""
  fipsMode: false
  tls:
    autoGenerated: false
    coordinating:
      existingSecret: ""
    data:
      existingSecret: ""
    ingest:
      existingSecret: ""
    keyPassword: ""
    keystoreFilename: elasticsearch.keystore.jks
    keystorePassword: ""
    master:
      existingSecret: ""
    passwordsSecret: ""
    restEncryption: true
    secretKey: ""
    secretKeystoreKey: ""
    secretTruststoreKey: ""
    truststoreFilename: elasticsearch.truststore.jks
    truststorePassword: ""
    usePemCerts: false
    verificationMode: full
service:
  annotations: {}
  clusterIP: ""
  externalTrafficPolicy: Cluster
  extraPorts: []
  loadBalancerIP: ""
  loadBalancerSourceRanges: []
  nodePorts:
    restAPI: ""
    transport: ""
  ports:
    restAPI: 9200
    transport: 9300
  sessionAffinity: None
  sessionAffinityConfig: {}
  type: ClusterIP
sidecars: []
snapshotRepoPath: ""
sysctlImage:
  digest: ""
  enabled: true
  pullPolicy: IfNotPresent
  pullSecrets: []
  registry: docker.io
  repository: bitnami/bitnami-shell
  resources:
    limits: {}
    requests: {}
  tag: 11-debian-11-r113
useIstioLabels: true
volumePermissions:
  enabled: false
  image:
    digest: ""
    pullPolicy: IfNotPresent
    pullSecrets: []
    registry: docker.io
    repository: bitnami/bitnami-shell
    tag: 11-debian-11-r113
  resources:
    limits: {}
    requests: {}
